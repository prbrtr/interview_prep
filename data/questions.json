[
    {
        "question": "What is a palindrome?",
        "answers": [
            "A palindrome is a word, phrase, number, or other sequence of characters that reads the same forward and backward.",
            "Examples: 'racecar', 'madam', 'level'."
        ]
    },
    {
        "question": "What is the Fibonacci series?",
        "answers": [
            "The Fibonacci series is a sequence of numbers where each number is the sum of the two preceding ones.",
            "Example: 0, 1, 1, 2, 3, 5, 8, 13, 21...",
            "Code Example:\n# Fibonacci series in Python\ndef fibonacci(n):\n    a, b = 0, 1\n    while a < n:\n        print(a)\n        a, b = b, a + b"
        ]
    },
    {
        "question": "What is the difference between Shallow Copy and Deep Copy?",
        "answers": [
            "Shallow Copy: Points to the same memory address as the original variable. Modifying the shallow copy can affect the original object.",
            "Deep Copy: Creates a completely independent copy of the object, with different memory addresses. Modifying the deep copy will not affect the original object.",
            "Code Example:\nimport copy\n# Shallow Copy Example\noriginal = [1, 2, [3, 4]]\nshallow = copy.copy(original)\n# Deep Copy Example\ndeep = copy.deepcopy(original)"
        ]
    },
    {
        "question": "What is the difference between Authentication and Authorization?",
        "answers": [
            "Authentication is the process of verifying 'Who you are.' Typically involves credentials like username and password.",
            "Authorization determines 'What you are allowed to do.' Defines access levels and permissions."
        ]
    },
    {
        "question": "How do you remove vowels from a string in Python?",
        "answers": [
            "You can remove vowels from a string using a list comprehension.",
            "Code Example:\ndef remove_vowels(s):\n    vowels = 'aeiouAEIOU'\n    return ''.join([char for char in s if char not in vowels])\n\nresult = remove_vowels('Automation Testing')\nprint(result)  # Output: tmtn Tstng"
        ]
    },
    {
        "question": "What is a Generator in Python?",
        "answers": [
            "A generator is a function that returns an iterator that yields a sequence of values using the yield keyword.",
            "Code Example:\ndef my_generator():\n    yield 1\n    yield 2\n    yield 3\n\ngen = my_generator()\nprint(next(gen))  # Output: 1\nprint(next(gen))  # Output: 2"
        ]
    }
]
